<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Converters="clr-namespace:MMK.SmartSystem.Laser.Base.Converters" 
                    xmlns:cc="clr-namespace:MMK.SmartSystem.Laser.Base.CustomControl">

    <!--<ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/WPF.UI;component/Themes/Color.xaml" />
    </ResourceDictionary.MergedDictionaries>-->

    <Converters:StringIsEmptyConverter x:Key="StringIsEmptyConverter" />

    <Color x:Key="Color.Light.Border.Normal">#D7DDE4</Color>
    <Color x:Key="Color.Light.Border.MouseOver">#5CADFF</Color>

    <SolidColorBrush x:Key="Light.Border.Normal" Color="#D7DDE4" />
    <SolidColorBrush x:Key="Light.Border.MouseOver" Color="#5CADFF" />
    <SolidColorBrush x:Key="Light.Border.Pressed" Color="#5CADFF" />
    <SolidColorBrush x:Key="Light.Border.Disabled" Color="#D7DDE4" />

    <SolidColorBrush x:Key="Brush.Item.MouseOver.Background" Color="#E2E2E2" />
    <SolidColorBrush x:Key="Brush.Item.Selected.Background" Color="#47A3FF" />
    <SolidColorBrush x:Key="Brush.Item.MouseOver.Foreground" Color="#000000" />
    <SolidColorBrush x:Key="Brush.Item.Selected.Foreground" Color="#FFFFFF" />

    <!--  三角形填充颜色  -->
    <SolidColorBrush x:Key="Light.Triangle.Fill" Color="White" />

    <PathGeometry x:Key="IsSelectedIcon" Figures="M416.058904 776.794805c-10.475586 0-20.951171-3.996011-28.943193-11.989055L131.272789 508.962827c-15.985066-15.985066-15.985066-41.901319 0-57.886385s41.901319-15.985066 57.886385 0l226.898707 226.898707 418.780899-418.780899c15.985066-15.985066 41.901319-15.985066 57.886385 0s15.985066 41.901319 0 57.886385L445.002097 764.80575C437.010075 772.797771 426.53449 776.794805 416.058904 776.794805z" />
    <PathGeometry x:Key="Arrow.Down" Figures="M191.814654 383.980301 832.184323 383.980301 512 767.996418Z" />
    <PathGeometry x:Key="Arrow.Up" Figures="M832.185 640.020h-640.37l320.184-384.016z" />

    <!--#region ComboBoxStyle基样式-->
    
    <SolidColorBrush x:Key="BorderColor" Color="#00D3D6DB" />
    <SolidColorBrush x:Key="ComboBox.BorderBrush" Color="#ABADB3" />
    <SolidColorBrush x:Key="ComboBox.Popup.BorderBrush" Color="#C8C8C8" />
    <SolidColorBrush x:Key="ComboBox.Normal.Background" Color="#202328" />
    <SolidColorBrush x:Key="ComboBox.Disabled.Foreground" Color="#888" />
    <SolidColorBrush x:Key="ComboBox.Disabled.Background" Color="#00eeeeee" />
    <SolidColorBrush x:Key="ComboBox.Disabled.BorderBrush" Color="#00888888" />

    <SolidColorBrush x:Key="ComboBoxItem.MouseOver.Background" Color="#202328" />
    <SolidColorBrush x:Key="ComboBoxItem.MouseOver.Foreground" Color="#000000" />

    <DropShadowEffect x:Key="BorderShadow" BlurRadius="5" Opacity="0.2" ShadowDepth="0"
                      Color="Brown" />

    <ControlTemplate x:Key="ComboBoxToggleButtonTemplate" TargetType="{x:Type cc:ZToggleButton}">
        <Grid Background="Transparent">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="auto" />
            </Grid.ColumnDefinitions>
            <Border Grid.ColumnSpan="2" x:Name="ShadowBorder" CornerRadius="{TemplateBinding CornerRadius}" 
                    Background="#FFFFFF" SnapsToDevicePixels="True" UseLayoutRounding="True">
                <Border.Effect>
                    <DropShadowEffect BlurRadius="5" Opacity="0.2" ShadowDepth="0" Color="Transparent" />
                </Border.Effect>
            </Border>

            <Border Name="Border" Grid.ColumnSpan="2"
                    Background="{StaticResource ComboBox.Normal.Background}"
                    BorderBrush="{StaticResource Light.Border.Normal}"
                    BorderThickness="1, 1, 1, 1"
                    CornerRadius="{TemplateBinding CornerRadius}"
                    SnapsToDevicePixels="True" UseLayoutRounding="True" />

            <Border Name="ButtonBorder" Grid.Column="1" Margin="1, 1, 1, 1"
                    Background="{StaticResource ComboBox.Normal.Background}"
                    CornerRadius="{Binding CornerRadius,
                                           ElementName=Border}"
                    Padding="5,0,8,0">
                <Path Name="Arrow" Grid.Column="1" Width="10" HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      Data="{StaticResource Arrow.Down}"
                      Fill="{StaticResource ComboBox.BorderBrush}"
                      RenderTransformOrigin="0.5,0.5" SnapsToDevicePixels="True" Stretch="Uniform"
                      UseLayoutRounding="True">
                    <Path.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform />
                            <SkewTransform />
                            <RotateTransform />
                            <TranslateTransform />
                        </TransformGroup>
                    </Path.RenderTransform>
                </Path>
            </Border>

            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CheckStates">
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetName="Arrow"
                                             Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)"
                                             To="180" />
                            <ColorAnimation Duration="0:0:0.2" Storyboard.TargetName="ShadowBorder"
                                            Storyboard.TargetProperty="(Border.Effect).(DropShadowEffect.Color)" To="Brown" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Unchecked">
                        <Storyboard>
                            <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetName="Arrow"
                                             Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)"
                                             To="0" />
                            <ColorAnimation Duration="0:0:0.2" Storyboard.TargetName="ShadowBorder"
                                            Storyboard.TargetProperty="(Border.Effect).(DropShadowEffect.Color)" To="Transparent" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource Light.Border.MouseOver}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ToggleButton.IsChecked" Value="True" />
                    <Condition Property="IsMouseOver" Value="False" />
                </MultiTrigger.Conditions>
                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource Light.Border.MouseOver}" />
            </MultiTrigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter TargetName="Border" Property="Panel.Background" Value="{StaticResource ComboBox.Disabled.Background}" />
                <Setter TargetName="Border" Property="Border.BorderBrush" Value="{StaticResource ComboBox.Disabled.BorderBrush}" />
                <Setter TargetName="ButtonBorder" Property="Panel.Background" Value="{StaticResource ComboBox.Disabled.Background}" />
                <Setter TargetName="ButtonBorder" Property="Border.BorderBrush" Value="{StaticResource ComboBox.Disabled.BorderBrush}" />
                <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBox.Disabled.Foreground}" />
                <Setter TargetName="Arrow" Property="Stroke" Value="#999" />
                <Setter TargetName="Arrow" Property="StrokeThickness" Value="0" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="ComboBoxItemStyle" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Padding" Value="10,5,15,5" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontSize" Value="{Binding FontSize, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border x:Name="Bd"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true" UseLayoutRounding="True">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource Brush.Item.MouseOver.Background}" />
                            <Setter Property="Foreground" Value="{StaticResource Brush.Item.MouseOver.Foreground}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{StaticResource Brush.Item.Selected.Background}" />
                            <Setter Property="Foreground" Value="{StaticResource Brush.Item.Selected.Foreground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type cc:ZComboBox}">
        <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Setter Property="TextElement.Foreground" Value="#000000" />
        <Setter Property="TextElement.FontSize" Value="12" />
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource ComboBoxItemStyle}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="5,0,0,0" />
        <Setter Property="Watermark" Value="请选择..." />
        <Setter Property="CornerRadius" Value="3" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type cc:ZComboBox}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="Storyboard_Open">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DropDown" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0.0" />
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DropDown" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0.9" />
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="Storyboard_Close">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DropDown" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DropDown" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                                <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid Width="{TemplateBinding Width}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <Grid Grid.Column="1">
                            <cc:ZToggleButton x:Name="ToggleButton" ClickMode="Press"
                                               CornerRadius="{TemplateBinding CornerRadius}"
                                               Focusable="False"
                                               IsChecked="{Binding Path=IsDropDownOpen,
                                                                   RelativeSource={RelativeSource TemplatedParent},
                                                                   Mode=TwoWay}"
                                               Template="{StaticResource ComboBoxToggleButtonTemplate}" />
                            <ContentPresenter Name="ContentSite" Margin="5, 3, 25, 3" HorizontalAlignment="Left"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Content="{TemplateBinding ComboBox.SelectionBoxItem}"
                                              ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                              IsHitTestVisible="False" />
                            <TextBlock Margin="{TemplateBinding Padding}"
                                       HorizontalAlignment="Left"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                       FontSize="{TemplateBinding FontSize}"
                                       Opacity="0.4" IsHitTestVisible="False"
                                       Text="{TemplateBinding Watermark}">
                                <TextBlock.Style>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Style.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding Path=Content, ElementName=ContentSite, Converter={StaticResource StringIsEmptyConverter}}" Value="True" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Visibility" Value="Visible" />
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding Path=Content, ElementName=ContentSite, Converter={StaticResource StringIsEmptyConverter}}" Value="False" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </MultiDataTrigger>

                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding Path=Text.IsEmpty, ElementName=PART_EditableTextBox}" Value="False" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                            <TextBox Name="PART_EditableTextBox" Margin="5, 3, 25, 3" HorizontalAlignment="Stretch"
                                     VerticalAlignment="Center" Background="Transparent" Focusable="True" IsReadOnly="False"
                                     Visibility="Hidden" Text="{TemplateBinding ComboBox.SelectionBoxItem}">
                                <TextBox.Template>
                                    <ControlTemplate TargetType="TextBox">
                                        <Border x:Name="OuterBorder" Background="Transparent">
                                            <ScrollViewer x:Name="PART_ContentHost" VerticalAlignment="Center" />
                                        </Border>
                                    </ControlTemplate>
                                </TextBox.Template>
                            </TextBox>

                            <!--  Popup showing items  -->
                            <Popup Name="Popup"
                                   MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                                   MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}"
                                   AllowsTransparency="True" Focusable="False" HorizontalOffset="-1"
                                   IsOpen="{TemplateBinding IsDropDownOpen}"
                                   Placement="Bottom" StaysOpen="False" VerticalOffset="1">
                                <Grid Name="DropDown"
                                      Width="{TemplateBinding FrameworkElement.ActualWidth}"
                                      MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}"
                                      Margin="10,0,10,10" RenderTransformOrigin="0.5,0" SnapsToDevicePixels="True">
                                    <Grid.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform />
                                            <SkewTransform />
                                            <RotateTransform />
                                            <TranslateTransform />
                                        </TransformGroup>
                                    </Grid.RenderTransform>
                                    <Border Background="#FFFFFF" CornerRadius="3" SnapsToDevicePixels="True" UseLayoutRounding="True">
                                        <Border.Effect>
                                            <DropShadowEffect BlurRadius="5" Opacity="0.2" ShadowDepth="0" Color="Brown" />
                                        </Border.Effect>
                                    </Border>

                                    <Border Name="DropDownBorder" Background="#FFFFFF"
                                            BorderBrush="{StaticResource ComboBox.Popup.BorderBrush}"
                                            BorderThickness="1" CornerRadius="3" SnapsToDevicePixels="True" UseLayoutRounding="True" />

                                    <ScrollViewer Margin="0,3,0,3" SnapsToDevicePixels="True"
                                                  Style="{DynamicResource AutoDisappearScrollViewerStyle}">
                                        <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                            
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="ToggleButton" Property="IsChecked" Value="True">
                            <Trigger.ExitActions>
                                <StopStoryboard BeginStoryboardName="Storyboard_Open_BeginStoryboard" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="Storyboard_Open_BeginStoryboard" Storyboard="{StaticResource Storyboard_Open}" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger SourceName="ToggleButton" Property="IsChecked" Value="False">
                            <Trigger.ExitActions>
                                <StopStoryboard BeginStoryboardName="Storyboard_Close_BeginStoryboard" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="Storyboard_Close_BeginStoryboard" Storyboard="{StaticResource Storyboard_Close}" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="ItemsControl.HasItems" Value="False">
                            <Setter TargetName="DropDownBorder" Property="FrameworkElement.MinHeight" Value="100" />
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBox.Disabled.Foreground}" />
                            <Setter TargetName="PART_EditableTextBox" Property="Foreground" Value="{StaticResource ComboBox.Disabled.Foreground}" />
                        </Trigger>
                        <Trigger Property="ItemsControl.IsGrouping" Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                        </Trigger>
                        <Trigger Property="ComboBox.IsEditable" Value="True">
                            <Setter Property="KeyboardNavigation.IsTabStop" Value="False" />
                            <Setter TargetName="PART_EditableTextBox" Property="UIElement.Visibility" Value="Visible" />
                            <Setter TargetName="ContentSite" Property="UIElement.Visibility" Value="Hidden" />
                        </Trigger>
                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Grid Height="30">
            <Border Grid.Column="1" Background="White" Opacity="0" Cursor="Hand"/>
            <Path x:Name="Arrow" Grid.Column="1" Data="M 0 0 6 6 12 0 Z" VerticalAlignment="Center" HorizontalAlignment="Center" Stretch="None" Fill="#B1B1B1" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="true">
                <Setter TargetName="Arrow" Property="RenderTransform">
                    <Setter.Value>
                        <RotateTransform CenterX="6" CenterY="3" Angle="180"></RotateTransform>
                    </Setter.Value>
                </Setter>
                <Setter TargetName="Arrow" Property="Margin" Value="0 0 0 2"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type ComboBox}" >
        <Setter Property="Foreground" Value="#787b8c"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid Background="#202328">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="0.8*"/>
                            <ColumnDefinition Width="0.2*" MaxWidth="30"/>
                        </Grid.ColumnDefinitions>
                        <Border Grid.Column="0" Grid.ColumnSpan="2" BorderThickness="1" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="1,0,0,1"/>
                        <ContentPresenter HorizontalAlignment="Left" Margin="3,3,0,3" x:Name="ContentSite" VerticalAlignment="Center" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" IsHitTestVisible="False"/>

                        <!--ToggleButton 已数据绑定到 ComboBox 本身以切换 IsDropDownOpen-->
                        <ToggleButton Grid.Column="1" Template="{StaticResource ComboBoxToggleButton}" x:Name="ToggleButton" Focusable="false" IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press"/>
                        <!--必须将 TextBox 命名为 PART_EditableTextBox，否则 ComboBox 将无法识别它-->
                        <TextBox Height="30" Visibility="Hidden" BorderThickness="0" Margin="2 0 0 0" x:Name="PART_EditableTextBox"  VerticalAlignment="Center" Focusable="True" Background="#202328" IsReadOnly="{TemplateBinding IsReadOnly}"/>

                        <!--Popup 可显示 ComboBox 中的项列表。IsOpen 已数据绑定到通过 ComboBoxToggleButton 来切换的 IsDropDownOpen-->
                        <Popup IsOpen="{TemplateBinding IsDropDownOpen}" Placement="Bottom" x:Name="Popup" Focusable="False" AllowsTransparency="True" PopupAnimation="Slide" >
                            <Grid MaxHeight="150" MinWidth="{TemplateBinding ActualWidth}" x:Name="DropDown" SnapsToDevicePixels="True">
                                <Border x:Name="DropDownBorder"  BorderBrush="#121417" BorderThickness="1 0 1 1"/>
                                <ScrollViewer Margin="1"  SnapsToDevicePixels="True" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" CanContentScroll="True">
                                    <!--StackPanel 用于显示子级，方法是将 IsItemsHost 设置为 True-->
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" Background="#202328" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEditable" Value="true">
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->
</ResourceDictionary>