<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:conv="clr-namespace:MMK.SmartSystem.Laser.Base.Converters" >
    
    <conv:MopBackgroundColorConverter x:Key="_mbcc"/>

    <!--WIN-->
    <Style x:Key="WinFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <Grid Margin="4 2">
                        <Rectangle x:Name="r1" StrokeThickness="1" Stroke="Black" StrokeDashArray="2 2"/>
                        <Border x:Name="border" Width="{TemplateBinding ActualWidth}" Height="{TemplateBinding ActualHeight}"  CornerRadius="2" BorderThickness="1" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="WinShadowStyle">
        <Setter Property="Control.Foreground" Value="#FF2E205B" />
    </Style>
    <Style x:Key="WinButton" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Margin" Value="0,5"/>
        <Setter Property="FontFamily" Value="YouYuan"/>
        <Setter Property="FontSize" Value="16px"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource WinFocusVisual}" />
        <Setter Property="Background" Value="Black"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" CornerRadius="2"
						BorderThickness="0"
						Padding="0"
						Height="Auto" Width="Auto"
						SnapsToDevicePixels="False" BorderBrush="White">
                        <Border.Background>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#FF0F0F0F" Offset="1"/>
                                <GradientStop Color="#FF646464"/>
                            </LinearGradientBrush>
                        </Border.Background>
                        <Grid>
                            <Border CornerRadius="2" BorderBrush="White" BorderThickness="0">
                                <Grid HorizontalAlignment="Left" VerticalAlignment="Center" Margin="0,0,0,0">
                                    <TextBlock x:Name="text" FontSize="14" Margin="5" HorizontalAlignment="Center" VerticalAlignment="Center"
										Text="{Binding Content, RelativeSource={RelativeSource Mode=TemplatedParent}}" 
										Foreground="White" Style="{DynamicResource FontAwesome}"/>
                                </Grid>
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#FF4788c8" />
                            <Setter TargetName="text" Property="Foreground" Value="#FF4788c8" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#FF2E205B"/>
                        </Trigger>
                        <Trigger Property="IsDefaulted" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#FF2E205B"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#FF140A36" />
                            <Setter Property="Foreground" Value="#FFF74848"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Opacity" Value="0.7" />
                            <Setter Property="Foreground" Value="Gray" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="AlarmFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <Grid Margin="4 2">
                        <Rectangle x:Name="r1" StrokeThickness="1" Stroke="Black" StrokeDashArray="2 2"/>
                        <Border x:Name="border" Width="{TemplateBinding ActualWidth}" Height="{TemplateBinding ActualHeight}"  CornerRadius="2" BorderThickness="1" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="AlarmShadowStyle">
        <Setter Property="Control.Foreground" Value="#FF2E205B" />
    </Style>
    <Style x:Key="AlarmButton" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Margin" Value="0,5"/>
        <Setter Property="FontFamily" Value="YouYuan"/>
        <Setter Property="FontSize" Value="16px"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource AlarmFocusVisual}" />
        <Setter Property="Background" Value="Black"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" CornerRadius="0"
						BorderThickness="0"
						Padding="0" Background="{Binding Background, RelativeSource={RelativeSource Mode=TemplatedParent}}"
						Height="Auto" Width="Auto"
						SnapsToDevicePixels="False" BorderBrush="White">
                        <Grid>
                            <Border CornerRadius="0" BorderBrush="{Binding Background, RelativeSource={RelativeSource Mode=TemplatedParent}}" BorderThickness="0">
                                <Grid HorizontalAlignment="Left" VerticalAlignment="Center" Margin="0,0,0,0">
                                    <TextBlock x:Name="text" FontSize="14" Margin="5" HorizontalAlignment="Center" VerticalAlignment="Center"
										Text="{Binding Content, RelativeSource={RelativeSource Mode=TemplatedParent}}" 
										Foreground="White" Style="{DynamicResource FontAwesome}"/>
                                </Grid>
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#FF4788c8" />
                            <Setter TargetName="text" Property="Foreground" Value="#FF4788c8" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#FF2E205B"/>
                        </Trigger>
                        <Trigger Property="IsDefaulted" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#FF2E205B"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#FF140A36" />
                            <Setter Property="Foreground" Value="#FFF74848"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Opacity" Value="0.7" />
                            <Setter Property="Foreground" Value="Gray" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="AddMatrialFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <Grid Margin="4 2">
                        <Rectangle x:Name="r1" StrokeThickness="1" Stroke="Black" StrokeDashArray="2 2"/>
                        <Border x:Name="border" Width="{TemplateBinding ActualWidth}" Height="{TemplateBinding ActualHeight}"  CornerRadius="2" BorderThickness="1" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="AddMatrialShadowStyle">
        <Setter Property="Control.Foreground" Value="#FF2E205B" />
    </Style>
    <Style x:Key="AddMatrialButton" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Margin" Value="0,5"/>
        <Setter Property="FontFamily" Value="YouYuan"/>
        <Setter Property="FontSize" Value="16px"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource AddMatrialFocusVisual}" />
        <Setter Property="Background" Value="Black"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" CornerRadius="2"
						BorderThickness="0"
						Padding="0"
						Height="Auto" Width="Auto"
						SnapsToDevicePixels="False" BorderBrush="White" Background="White">
                        <Grid>
                            <Border CornerRadius="2" BorderBrush="White" BorderThickness="0">
                                <Grid HorizontalAlignment="Left" VerticalAlignment="Center" Margin="0,0,0,0">
                                    <TextBlock x:Name="text" FontSize="12" Margin="2" HorizontalAlignment="Center" VerticalAlignment="Center"
										Text="{Binding Content, RelativeSource={RelativeSource Mode=TemplatedParent}}" 
										Foreground="Black" Style="{DynamicResource FontAwesome}"/>
                                </Grid>
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#FF4788c8" />
                            <Setter TargetName="text" Property="Foreground" Value="#FF4788c8" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#FF2E205B"/>
                        </Trigger>
                        <Trigger Property="IsDefaulted" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#FF2E205B"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#FF140A36" />
                            <Setter Property="Foreground" Value="#FFF74848"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Opacity" Value="0.7" />
                            <Setter Property="Foreground" Value="Gray" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--User-->
    <Style x:Key="UserFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <Grid Margin="4 2">
                        <Rectangle x:Name="r1" StrokeThickness="1" Stroke="Black" StrokeDashArray="2 2"/>
                        <Border x:Name="border" Width="{TemplateBinding ActualWidth}" Height="{TemplateBinding ActualHeight}"  CornerRadius="2" BorderThickness="1" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="UserShadowStyle">
        <Setter Property="Control.Foreground" Value="#FF2E205B" />
    </Style>
    <Style x:Key="UserButton" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Margin" Value="0,5"/>
        <Setter Property="FontFamily" Value="YouYuan"/>
        <Setter Property="FontSize" Value="16px"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource UserFocusVisual}" />
        <Setter Property="Background" Value="Black"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" CornerRadius="3"
						BorderThickness="0"
						Padding="0"
						Height="Auto" Width="Auto"
						SnapsToDevicePixels="False" BorderBrush="White" Background="DarkGray">
                        <!--<Border.Background>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#FF0F0F0F" Offset="1"/>
                                <GradientStop Color="#FF646464"/>
                            </LinearGradientBrush>
                        </Border.Background>-->
                        <Grid>
                            <Border CornerRadius="2" BorderBrush="White" BorderThickness="0">
                                <Grid HorizontalAlignment="Left" VerticalAlignment="Center" Margin="0,0,0,0">
                                    <TextBlock x:Name="text" FontSize="14" Margin="5" HorizontalAlignment="Center" VerticalAlignment="Center"
										Text="{Binding Content, RelativeSource={RelativeSource Mode=TemplatedParent}}" 
										Foreground="White" Style="{DynamicResource FontAwesome}"/>
                                </Grid>
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#FF4788c8" />
                            <Setter TargetName="text" Property="Foreground" Value="#FF4788c8" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#FF2E205B"/>
                        </Trigger>
                        <Trigger Property="IsDefaulted" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#FF2E205B"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#FF140A36" />
                            <Setter Property="Foreground" Value="#FFF74848"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Opacity" Value="0.7" />
                            <Setter Property="Foreground" Value="Gray" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Info-->
    <Style x:Key="InfoFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <Grid Margin="4 2">
                        <Rectangle x:Name="r1" StrokeThickness="1" Stroke="Black" StrokeDashArray="2 2"/>
                        <Border x:Name="border" Width="{TemplateBinding ActualWidth}" Height="{TemplateBinding ActualHeight}"  CornerRadius="2" BorderThickness="1" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="InfoShadowStyle">
        <Setter Property="Control.Foreground" Value="#FF2E205B" />
    </Style>
    <Style x:Key="InfoButton" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Margin" Value="0,5"/>
        <Setter Property="FontFamily" Value="YouYuan"/>
        <Setter Property="FontSize" Value="16px"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource InfoFocusVisual}" />
        <Setter Property="Background" Value="White"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" CornerRadius="2"
						BorderThickness="0"
						Padding="0"
						Height="Auto" Width="Auto"
						SnapsToDevicePixels="False" BorderBrush="White" Background="White">
                        <Grid>
                            <Border CornerRadius="2" BorderBrush="White" BorderThickness="0" Background="{Binding Background, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                                <Grid HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0">
                                    <TextBlock x:Name="text" FontSize="14" Margin="5" HorizontalAlignment="Center" VerticalAlignment="Center"
										Text="{Binding Content, RelativeSource={RelativeSource Mode=TemplatedParent}}" 
                                        
										Foreground="{Binding Foreground, RelativeSource={RelativeSource Mode=TemplatedParent}}" 
                                               Style="{DynamicResource FontAwesome}"/>
                                </Grid>
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#FF4788c8" />
                            <Setter TargetName="text" Property="Foreground" Value="#FF4788c8" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#FF2E205B"/>
                        </Trigger>
                        <Trigger Property="IsDefaulted" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#FF2E205B"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#FF140A36" />
                            <Setter Property="Foreground" Value="#FFF74848"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Opacity" Value="0.7" />
                            <Setter Property="Foreground" Value="Gray" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--KEYBOARD-->
    <Style x:Key="KeyBoardFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <Grid Margin="4 2">
                        <Rectangle x:Name="r1" StrokeThickness="1" Stroke="Black" StrokeDashArray="2 2"/>
                        <Border x:Name="border" Width="{TemplateBinding ActualWidth}" Height="{TemplateBinding ActualHeight}"  CornerRadius="2" BorderThickness="1" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="KeyBoardShadowStyle">
        <Setter Property="Control.Foreground" Value="#FF2E205B" />
    </Style>
    <Style x:Key="KeyBoardButton" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Margin" Value="0,5"/>
        <Setter Property="FontFamily" Value="YouYuan"/>
        <Setter Property="FontSize" Value="16px"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource KeyBoardFocusVisual}" />
        <Setter Property="Background" Value="White"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" CornerRadius="2"
						BorderThickness="1"
						Padding="0"
						Height="Auto" Width="Auto"
						SnapsToDevicePixels="False" BorderBrush="White" Background="Transparent">
                        <Grid>
                            <Border CornerRadius="2" BorderBrush="White" BorderThickness="1">
                                <Grid HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0">
                                    <TextBlock x:Name="text" FontSize="14" Margin="5" 
                                        HorizontalAlignment="Center" VerticalAlignment="Center"
										Text="{Binding Content, RelativeSource={RelativeSource Mode=TemplatedParent}}" 
										Foreground="DarkGray" Style="{DynamicResource FontAwesome}"/>
                                </Grid>
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#FF4788c8" />
                            <Setter TargetName="text" Property="Foreground" Value="#FF4788c8" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="false">
                            <Setter TargetName="border" Property="BorderBrush" Value="White" />
                            <Setter TargetName="text" Property="Foreground" Value="DarkGray" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#FF4788c8" />
                            <Setter TargetName="text" Property="Foreground" Value="#FF4788c8" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="border" Property="BorderBrush" Value="White"/>
                            <Setter TargetName="text" Property="Foreground" Value="DarkGray" />
                        </Trigger>
                        <!--<Trigger Property="IsPressed" Value="false">
                            <Setter TargetName="border" Property="BorderBrush" Value="White" />
                            <Setter TargetName="text" Property="Foreground" Value="DarkGray" />
                        </Trigger>-->
                        <!--<Trigger Property="IsDefaulted" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#FF2E205B"/>
                        </Trigger>-->
                        <!--<Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#FF140A36" />
                            <Setter Property="Foreground" Value="#FFF74848"/>
                        </Trigger>-->
                        <!--<Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Opacity" Value="0.7" />
                            <Setter Property="Foreground" Value="Gray" />
                        </Trigger>-->

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--CNC-->
    <Style x:Key="CncButtonFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <Grid Margin="4 2">
                        <Rectangle x:Name="r1" StrokeThickness="1" Stroke="Black" StrokeDashArray="2 2"/>
                        <Border x:Name="border" Width="{TemplateBinding ActualWidth}" Height="{TemplateBinding ActualHeight}"  CornerRadius="2" BorderThickness="1" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CncButtonShadowStyle">
        <Setter Property="Control.Foreground" Value="#FF2E205B" />
    </Style>
    <Style x:Key="CncButton" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Margin" Value="0,5"/>
        <Setter Property="FontFamily" Value="YouYuan"/>
        <Setter Property="FontSize" Value="16px"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource CncButtonFocusVisual}" />
        <Setter Property="Background" Value="White"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" CornerRadius="2"
						BorderThickness="1"
						Padding="0"
						Height="Auto" Width="Auto"
						SnapsToDevicePixels="False" BorderBrush="White" Background="Transparent">
                        <Grid>
                            <Border CornerRadius="2" BorderBrush="{Binding BorderBrush, RelativeSource={RelativeSource Mode=TemplatedParent}}" 
                                    BorderThickness="1" Background="{Binding Background, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                                <Grid HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0">
                                    <TextBlock x:Name="text" FontSize="14" Margin="5" 
                                        HorizontalAlignment="Center" VerticalAlignment="Center" FontWeight="Bold"
										Text="{Binding Content, RelativeSource={RelativeSource Mode=TemplatedParent}}" 
										Foreground="DarkGray" Style="{DynamicResource FontAwesome}"/>
                                </Grid>
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#FF4788c8" />
                            <Setter TargetName="text" Property="Foreground" Value="#FF4788c8" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="false">
                            <Setter TargetName="border" Property="BorderBrush" Value="White" />
                            <Setter TargetName="text" Property="Foreground" Value="DarkGray" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#FF4788c8" />
                            <Setter TargetName="text" Property="Foreground" Value="#FF4788c8" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="border" Property="BorderBrush" Value="White"/>
                            <Setter TargetName="text" Property="Foreground" Value="DarkGray" />
                        </Trigger>
                        <!--<Trigger Property="IsPressed" Value="false">
                            <Setter TargetName="border" Property="BorderBrush" Value="White" />
                            <Setter TargetName="text" Property="Foreground" Value="DarkGray" />
                        </Trigger>-->
                        <!--<Trigger Property="IsDefaulted" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#FF2E205B"/>
                        </Trigger>-->
                        <!--<Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#FF140A36" />
                            <Setter Property="Foreground" Value="#FFF74848"/>
                        </Trigger>-->
                        <!--<Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Opacity" Value="0.7" />
                            <Setter Property="Foreground" Value="Gray" />
                        </Trigger>-->

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--MENU-->
    <Style x:Key="ToggleMenuFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <Grid Margin="4 2">
                        <Rectangle x:Name="r1" StrokeThickness="1" Stroke="Black" StrokeDashArray="2 2"/>
                        <Border x:Name="border" Width="{TemplateBinding ActualWidth}" Height="{TemplateBinding ActualHeight}"  CornerRadius="2" BorderThickness="1" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ToggleMenuShadowStyle">
        <Setter Property="Control.Foreground" Value="#FF2E205B" />
    </Style>
    <Style x:Key="ToggleMenuButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="FontFamily" Value="YouYuan"/>
        <Setter Property="FontSize" Value="16px"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource ToggleMenuFocusVisual}" />
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="border" CornerRadius="3"
                		BorderThickness="0"
                		Padding="0" 
                        Background="#FF2DE23E"
                        SnapsToDevicePixels="False" BorderBrush="Transparent" 
                        Width="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path= Width}"
                        Height="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path= Height}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="6"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="6"/>
                            </Grid.RowDefinitions>
                            <Grid x:Name="grid0" Grid.Row="0"/>

                            <Grid x:Name="grid1" Grid.Row="1" Background="Silver">
                                <TextBlock x:Name="text1" FontSize="16" Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path= Content}"
                                           HorizontalAlignment="Center" VerticalAlignment="Center" FontFamily="Microsoft Sans Serif" FontWeight="Bold"/>
                            </Grid>

                            <Grid x:Name="grid2" Grid.Row="2"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="#FFC5890A"/>
                            <!--<Setter TargetName="border" Property="Background" Value="#FF2E205B"/>
                            <Setter TargetName="grid1" Property="Background" Value="#FF333399"/>
                            <Setter TargetName="text1" Property="Foreground" Value="White"/>
                            <Setter TargetName="text1" Property="FontWeight" Value="Bold"/>-->
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="border" Property="Background" Value="#FFC5890A"/>
                            <!--<Setter TargetName="border" Property="Background" Value="#FF2E205B"/>
                            <Setter TargetName="grid1" Property="Background" Value="#FF333399"/>
                            <Setter TargetName="text1" Property="Foreground" Value="White"/>
                            <Setter TargetName="text1" Property="FontWeight" Value="Bold"/>-->
                            <!--<Setter TargetName="border"  Property="Background" Value="{StaticResource MainMenuChecked_SCB}"/>-->
                            <!--<Setter TargetName="border" Property="BorderBrush" Value="{StaticResource MainMenuChecked_SCB}"/>-->
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <!--<Setter TargetName="border" Property="BorderBrush" Value="#FF140A36" />-->
                            <!--<Setter Property="Foreground" Value="#FFF74848"/>-->
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <!--<Setter TargetName="border" Property="Opacity" Value="0.7" />-->
                            <!--<Setter Property="Foreground" Value="Gray" />-->
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Mop-->
    <Style x:Key="MopFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <Grid Margin="4 2">
                        <Rectangle x:Name="r1" StrokeThickness="1" Stroke="Black" StrokeDashArray="2 2"/>
                        <Border x:Name="border" Width="{TemplateBinding ActualWidth}" Height="{TemplateBinding ActualHeight}"  CornerRadius="2" BorderThickness="1" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="MopShadowStyle">
        <Setter Property="Control.Foreground" Value="#FF2E205B" />
    </Style>
    <Style x:Key="MopButton" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="FontFamily" Value="YouYuan"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="FontSize" Value="16px"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource MopFocusVisual}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" CornerRadius="2"
                		BorderThickness="2" SnapsToDevicePixels="False" 
                		Padding="0" Background="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path= Background}"
                        BorderBrush="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path= BorderBrush}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <TextBlock x:Name="text0" Grid.Row="0" FontSize="16" Margin="2,2,2,1"  FontFamily="Microsoft YaHei UI Light"
                                        HorizontalAlignment="Center" VerticalAlignment="Bottom"
										Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path= Content}" 
										Foreground="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path= Foreground}"/>
                            <TextBlock x:Name="text1" Grid.Row="1"  FontSize="16" Margin="2,1,2,2"  FontFamily="Microsoft YaHei UI Light"
                                        HorizontalAlignment="Center" VerticalAlignment="Top"
										Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path= Tag}"  
										Foreground="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path= Foreground}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#FF333399"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#FF333399"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <!--<Setter TargetName="border" Property="BorderBrush" Value="#FF140A36" />-->
                            <!--<Setter Property="Foreground" Value="#FFF74848"/>-->
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <!--<Setter TargetName="border" Property="Opacity" Value="0.7" />-->
                            <!--<Setter Property="Foreground" Value="Gray" />-->
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Mop-->
    <Style x:Key="MopCncMenuFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <Grid Margin="4 2">
                        <Rectangle x:Name="r1" StrokeThickness="1" Stroke="Black" StrokeDashArray="2 2"/>
                        <Border x:Name="border" Width="{TemplateBinding ActualWidth}" Height="{TemplateBinding ActualHeight}"  CornerRadius="2" BorderThickness="1" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="MopCncMenuShadowStyle">
        <Setter Property="Control.Foreground" Value="#FF2E205B" />
    </Style>
    <Style x:Key="MopCncMenuButton" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="FontFamily" Value="YouYuan"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="FontSize" Value="16px"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource MopCncMenuFocusVisual}" />
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" CornerRadius="2"
                		BorderThickness="2"
                		Padding="0" 
                		Height="75" Width="65" 
                        BorderBrush="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path= BorderBrush}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="0"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid x:Name="grid0" Grid.Row="0"/>
                            <Grid x:Name="grid1" Grid.Row="1" Background="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path= Background}">
                                <TextBlock x:Name="text1" Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path= Content}" FontSize="12"
                                           HorizontalAlignment="Center" VerticalAlignment="Center" FontFamily="YouYuan" FontWeight="Bold" Foreground="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path= Foreground}"/>
                            </Grid>

                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#FF333399"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#FF333399"/>
                            <!--<Setter TargetName="border" Property="Background" Value="#FF2E205B"/>
                            <Setter TargetName="grid1" Property="Background" Value="#FF333399"/>
                            <Setter TargetName="text1" Property="Foreground" Value="White"/>
                            <Setter TargetName="text1" Property="FontWeight" Value="Bold"/>-->
                        </Trigger>
                        <!--<Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#FF333399"/>
                            <Setter TargetName="border" Property="Background" Value="#FF333399"/>
                            -->
                        <!--<Setter TargetName="border" Property="Background" Value="#FF2E205B"/>
                            <Setter TargetName="grid1" Property="Background" Value="#FF333399"/>
                            <Setter TargetName="text1" Property="Foreground" Value="White"/>
                            <Setter TargetName="text1" Property="FontWeight" Value="Bold"/>-->
                        <!--<Setter TargetName="border"  Property="Background" Value="{StaticResource MainMenuChecked_SCB}"/>-->
                        <!--<Setter TargetName="border" Property="BorderBrush" Value="{StaticResource MainMenuChecked_SCB}"/>-->
                        <!--
                        </Trigger>-->
                        <Trigger Property="IsFocused" Value="True">
                            <!--<Setter TargetName="border" Property="BorderBrush" Value="#FF140A36" />-->
                            <!--<Setter Property="Foreground" Value="#FFF74848"/>-->
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <!--<Setter TargetName="border" Property="Opacity" Value="0.7" />-->
                            <!--<Setter Property="Foreground" Value="Gray" />-->
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RepeatMopFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <Grid Margin="4 2">
                        <Rectangle x:Name="r1" StrokeThickness="1" Stroke="Black" StrokeDashArray="2 2"/>
                        <Border x:Name="border" Width="{TemplateBinding ActualWidth}" Height="{TemplateBinding ActualHeight}"  CornerRadius="2" BorderThickness="1" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RepeatMopShadowStyle">
        <Setter Property="Control.Foreground" Value="#FF2E205B" />
    </Style>
    <Style x:Key="RepeatMopButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="FontFamily" Value="YouYuan"/>
        <Setter Property="FontSize" Value="16px"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource RepeatMopFocusVisual}" />
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border x:Name="border" CornerRadius="2"
                		BorderThickness="2"
                		Padding="0" 
                		Height="65" Width="65" 
                        BorderBrush="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path= BorderBrush}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="0"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid x:Name="grid0" Grid.Row="0"/>
                            <Grid x:Name="grid1" Grid.Row="1" Background="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path= Background}">
                                <TextBlock x:Name="text1" Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path= Content}" FontSize="12"
                                           HorizontalAlignment="Center" VerticalAlignment="Center" FontFamily="YouYuan" FontWeight="Bold" Foreground="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path= Foreground}"/>
                            </Grid>

                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#FF333399"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#FF333399"/>
                            <!--<Setter TargetName="border" Property="Background" Value="#FF2E205B"/>
                            <Setter TargetName="grid1" Property="Background" Value="#FF333399"/>
                            <Setter TargetName="text1" Property="Foreground" Value="White"/>
                            <Setter TargetName="text1" Property="FontWeight" Value="Bold"/>-->
                        </Trigger>
                        <!--<Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#FF333399"/>
                            <Setter TargetName="border" Property="Background" Value="#FF333399"/>
                            -->
                        <!--<Setter TargetName="border" Property="Background" Value="#FF2E205B"/>
                            <Setter TargetName="grid1" Property="Background" Value="#FF333399"/>
                            <Setter TargetName="text1" Property="Foreground" Value="White"/>
                            <Setter TargetName="text1" Property="FontWeight" Value="Bold"/>-->
                        <!--<Setter TargetName="border"  Property="Background" Value="{StaticResource MainMenuChecked_SCB}"/>-->
                        <!--<Setter TargetName="border" Property="BorderBrush" Value="{StaticResource MainMenuChecked_SCB}"/>-->
                        <!--
                        </Trigger>-->
                        <Trigger Property="IsFocused" Value="True">
                            <!--<Setter TargetName="border" Property="BorderBrush" Value="#FF140A36" />-->
                            <!--<Setter Property="Foreground" Value="#FFF74848"/>-->
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <!--<Setter TargetName="border" Property="Opacity" Value="0.7" />-->
                            <!--<Setter Property="Foreground" Value="Gray" />-->
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--SKB-->
    <Style x:Key="SKBFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <Grid Margin="4 2">
                        <Rectangle x:Name="r1" StrokeThickness="1" Stroke="Black" StrokeDashArray="2 2"/>
                        <Border x:Name="border" Width="{TemplateBinding ActualWidth}" Height="{TemplateBinding ActualHeight}"  CornerRadius="2" BorderThickness="1" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SKBShadowStyle">
        <Setter Property="Control.Foreground" Value="#FF2E205B" />
    </Style>
    <Style x:Key="SKBButton" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="FontFamily" Value="YouYuan"/>
        <Setter Property="FontSize" Value="16px"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource SKBFocusVisual}" />
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" CornerRadius="2"
                		BorderThickness="2"
                		Padding="0" 
                		Height="65" Width="65" 
                        Background="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path= Background}" BorderBrush="DarkGray">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="6"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid x:Name="grid0" Grid.Row="0"/>
                            <Grid x:Name="grid1" Grid.Row="1" Background="Transparent">
                                <TextBlock x:Name="text1" Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path= Content}" FontSize="12"
                                           HorizontalAlignment="Center" VerticalAlignment="Center" FontFamily="YouYuan" FontWeight="Bold" 
                                           Foreground="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path= Foreground}"/>
                            </Grid>

                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#FF333399"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#FF333399"/>
                            <!--<Setter TargetName="border" Property="Background" Value="#FF2E205B"/>
                            <Setter TargetName="grid1" Property="Background" Value="#FF333399"/>
                            <Setter TargetName="text1" Property="Foreground" Value="White"/>
                            <Setter TargetName="text1" Property="FontWeight" Value="Bold"/>-->
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <!--<Setter TargetName="border" Property="BorderBrush" Value="#FF140A36" />-->
                            <!--<Setter Property="Foreground" Value="#FFF74848"/>-->
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <!--<Setter TargetName="border" Property="Opacity" Value="0.7" />-->
                            <!--<Setter Property="Foreground" Value="Gray" />-->
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--DKB-->
    <Style x:Key="DKBFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <Grid Margin="4 2">
                        <Rectangle x:Name="r1" StrokeThickness="1" Stroke="Black" StrokeDashArray="2 2"/>
                        <Border x:Name="border" Width="{TemplateBinding ActualWidth}" Height="{TemplateBinding ActualHeight}"  CornerRadius="2" BorderThickness="1" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DKBShadowStyle">
        <Setter Property="Control.Foreground" Value="#FF2E205B" />
    </Style>
    <Style x:Key="DKBButton" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="FontFamily" Value="YouYuan"/>
        <Setter Property="FontSize" Value="16px"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource DKBFocusVisual}" />
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" CornerRadius="2"
                		BorderThickness="2"
                		Padding="0" 
                		Height="65" Width="130" 
                        Background="Transparent" BorderBrush="DarkGray">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="6"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid x:Name="grid0" Grid.Row="0"/>
                            <Grid x:Name="grid1" Grid.Row="1" Background="Transparent">
                                <TextBlock x:Name="text1" Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path= Content}" FontSize="12"
                                           HorizontalAlignment="Center" VerticalAlignment="Center" FontFamily="YouYuan" FontWeight="Bold" Foreground="White"/>
                            </Grid>

                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#FF333399"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#FF333399"/>
                            <!--<Setter TargetName="border" Property="Background" Value="#FF2E205B"/>
                            <Setter TargetName="grid1" Property="Background" Value="#FF333399"/>
                            <Setter TargetName="text1" Property="Foreground" Value="White"/>
                            <Setter TargetName="text1" Property="FontWeight" Value="Bold"/>-->
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <!--<Setter TargetName="border" Property="BorderBrush" Value="#FF140A36" />-->
                            <!--<Setter Property="Foreground" Value="#FFF74848"/>-->
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <!--<Setter TargetName="border" Property="Opacity" Value="0.7" />-->
                            <!--<Setter Property="Foreground" Value="Gray" />-->
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--DKB2-->
    <Style x:Key="DKB2FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <Grid Margin="4 2">
                        <Rectangle x:Name="r1" StrokeThickness="1" Stroke="Black" StrokeDashArray="2 2"/>
                        <Border x:Name="border" Width="{TemplateBinding ActualWidth}" Height="{TemplateBinding ActualHeight}"  CornerRadius="2" BorderThickness="1" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DKB2ShadowStyle">
        <Setter Property="Control.Foreground" Value="#FF2E205B" />
    </Style>
    <Style x:Key="DKB2Button" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="FontFamily" Value="YouYuan"/>
        <Setter Property="FontSize" Value="16px"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource DKB2FocusVisual}" />
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" CornerRadius="2"
                		BorderThickness="2"
                		Padding="0" 
                		Height="130" Width="65" 
                        Background="Transparent" BorderBrush="DarkGray">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="6"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid x:Name="grid0" Grid.Row="0"/>
                            <Grid x:Name="grid1" Grid.Row="1" Background="Transparent">
                                <TextBlock x:Name="text1" Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path= Content}" FontSize="12"
                                           HorizontalAlignment="Center" VerticalAlignment="Center" FontFamily="YouYuan" FontWeight="Bold" Foreground="White"/>
                            </Grid>

                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#FF333399"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#FF333399"/>
                            <!--<Setter TargetName="border" Property="Background" Value="#FF2E205B"/>
                            <Setter TargetName="grid1" Property="Background" Value="#FF333399"/>
                            <Setter TargetName="text1" Property="Foreground" Value="White"/>
                            <Setter TargetName="text1" Property="FontWeight" Value="Bold"/>-->
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <!--<Setter TargetName="border" Property="BorderBrush" Value="#FF140A36" />-->
                            <!--<Setter Property="Foreground" Value="#FFF74848"/>-->
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <!--<Setter TargetName="border" Property="Opacity" Value="0.7" />-->
                            <!--<Setter Property="Foreground" Value="Gray" />-->
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--TKB-->
    <Style x:Key="TKBFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <Grid Margin="4 2">
                        <Rectangle x:Name="r1" StrokeThickness="1" Stroke="Black" StrokeDashArray="2 2"/>
                        <Border x:Name="border" Width="{TemplateBinding ActualWidth}" Height="{TemplateBinding ActualHeight}"  CornerRadius="2" BorderThickness="1" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TKBShadowStyle">
        <Setter Property="Control.Foreground" Value="#FF2E205B" />
    </Style>
    <Style x:Key="TKBButton" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="FontFamily" Value="YouYuan"/>
        <Setter Property="FontSize" Value="16px"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource TKBFocusVisual}" />
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" CornerRadius="2"
                		BorderThickness="2"
                		Padding="0" 
                		Height="65" Width="270" 
                        Background="Transparent" BorderBrush="DarkGray">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="6"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid x:Name="grid0" Grid.Row="0"/>
                            <Grid x:Name="grid1" Grid.Row="1" Background="Transparent">
                                <TextBlock x:Name="text1" Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path= Content}" FontSize="12"
                                           HorizontalAlignment="Center" VerticalAlignment="Center" FontFamily="YouYuan" FontWeight="Bold" Foreground="White"/>
                            </Grid>

                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#FF333399"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#FF333399"/>
                            <!--<Setter TargetName="border" Property="Background" Value="#FF2E205B"/>
                            <Setter TargetName="grid1" Property="Background" Value="#FF333399"/>
                            <Setter TargetName="text1" Property="Foreground" Value="White"/>
                            <Setter TargetName="text1" Property="FontWeight" Value="Bold"/>-->
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <!--<Setter TargetName="border" Property="BorderBrush" Value="#FF140A36" />-->
                            <!--<Setter Property="Foreground" Value="#FFF74848"/>-->
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <!--<Setter TargetName="border" Property="Opacity" Value="0.7" />-->
                            <!--<Setter Property="Foreground" Value="Gray" />-->
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--OV-->
    <Style x:Key="OVFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <Grid Margin="4 2">
                        <Rectangle x:Name="r1" StrokeThickness="1" Stroke="Black" StrokeDashArray="2 2"/>
                        <Border x:Name="border" Width="{TemplateBinding ActualWidth}" Height="{TemplateBinding ActualHeight}"  CornerRadius="2" BorderThickness="1" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="OVShadowStyle">
        <Setter Property="Control.Foreground" Value="#FF2E205B" />
    </Style>
    <Style x:Key="OVButton" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Margin" Value="0,0"/>
        <Setter Property="FontFamily" Value="YouYuan"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="FontSize" Value="16px"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource OVFocusVisual}" />
        <Setter Property="Background" Value="Black"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" CornerRadius="2"
						BorderThickness="2"
						Padding="0"
						Height="30" Width="30" Background="#FF484848"
						SnapsToDevicePixels="False" BorderBrush="Transparent">
                        <Grid>
                            <Border CornerRadius="0" BorderBrush="White" BorderThickness="0">
                                <Grid HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0">
                                    <TextBlock x:Name="text" FontSize="20" FontWeight="Bold" HorizontalAlignment="Center" VerticalAlignment="Center"
										Text="{Binding Content, RelativeSource={RelativeSource Mode=TemplatedParent}}" 
										Foreground="White" Style="{DynamicResource FontAwesome}"/>
                                </Grid>
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#FF4788c8" />
                            <Setter TargetName="text" Property="Foreground" Value="#FF4788c8" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#FF2E205B"/>
                        </Trigger>
                        <Trigger Property="IsDefaulted" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#FF2E205B"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#FF140A36" />
                            <Setter Property="Foreground" Value="#FFF74848"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Opacity" Value="0.7" />
                            <Setter Property="Foreground" Value="Gray" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--AxisArror BUTTON-->
    <Style x:Key="AxisArrorFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <Grid Margin="4 2">
                        <Rectangle x:Name="r1" StrokeThickness="1" Stroke="Black" StrokeDashArray="2 2"/>
                        <Border x:Name="border" Width="{TemplateBinding ActualWidth}" Height="{TemplateBinding ActualHeight}"  CornerRadius="2" BorderThickness="1" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="AxisArrorShadowStyle">
        <Setter Property="Control.Foreground" Value="#FF2E205B" />
    </Style>
    <Style x:Key="AxisArrorButton" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="FontFamily" Value="YouYuan"/>
        <Setter Property="FontSize" Value="16px"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource AxisArrorFocusVisual}" />
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="DarkGray"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" CornerRadius="0"
                		BorderThickness="0"
                		Padding="0" 
                        Background="Transparent" BorderBrush="#FF323232">
                        <Grid>
                            <Rectangle Panel.ZIndex="-1">
                                <Rectangle.Fill>
                                    <DrawingBrush  Stretch="Uniform">
                                        <DrawingBrush.Drawing>
                                            <DrawingGroup>
                                                <DrawingGroup.Children>
                                                    <GeometryDrawing Brush="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path= Background}" Geometry="F1 M 50,10.8333L 10.25,51.8333L 30,51.8333L 30,85.8333L 69.75,85.8333L 70,51.8333L 92.25,51.8333L 50,10.8333 Z ">
                                                        <GeometryDrawing.Pen>
                                                            <Pen LineJoin="Round" Brush="#FFF4F8F1"/>
                                                        </GeometryDrawing.Pen>
                                                    </GeometryDrawing>
                                                </DrawingGroup.Children>
                                            </DrawingGroup>
                                        </DrawingBrush.Drawing>
                                    </DrawingBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                            <TextBlock Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path= Content}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="Transparent"/>
                            <!--<Setter TargetName="border" Property="BorderThickness" Value="2"/>-->
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="Transparent"/>
                            <Setter TargetName="border" Property="BorderThickness" Value="2"/>
                            <!--<Setter TargetName="border" Property="Background" Value="#FF2E205B"/>
                            <Setter TargetName="grid1" Property="Background" Value="#FF333399"/>
                            <Setter TargetName="text1" Property="Foreground" Value="White"/>
                            <Setter TargetName="text1" Property="FontWeight" Value="Bold"/>-->
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <!--<Setter TargetName="border" Property="BorderBrush" Value="#FF140A36" />-->
                            <!--<Setter Property="Foreground" Value="#FFF74848"/>-->
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <!--<Setter TargetName="border" Property="Opacity" Value="0.7" />-->
                            <!--<Setter Property="Foreground" Value="Gray" />-->
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--LIB MENU-->
    <Style x:Key="LibMenuFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <Grid Margin="4 2">
                        <Rectangle x:Name="r1" StrokeThickness="1" Stroke="Black" StrokeDashArray="2 2"/>
                        <Border x:Name="border" Width="{TemplateBinding ActualWidth}" Height="{TemplateBinding ActualHeight}"  CornerRadius="2" BorderThickness="1" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="LibMenuShadowStyle">
        <Setter Property="Control.Foreground" Value="#FF2E205B" />
    </Style>
    <Style x:Key="LibMenuButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="FontFamily" Value="YouYuan"/>
        <Setter Property="FontSize" Value="16px"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource LibMenuFocusVisual}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="border" CornerRadius="2"
                		BorderThickness="1"
                		Padding="0" 
                		Height="50" Width="80" BorderBrush="#FF323232">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="0"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid x:Name="grid0" Grid.Row="0"/>
                            <Grid x:Name="grid1" Grid.Row="1" Background="Transparent">
                                <TextBlock x:Name="text1" Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path= Content}" FontSize="16"
                                           HorizontalAlignment="Center" VerticalAlignment="Center" FontFamily="Microsoft YaHei UI Light" FontWeight="Bold" Foreground="White"/>
                            </Grid>

                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#FF333399"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#FF333399"/>
                            <!--<Setter TargetName="border" Property="Background" Value="#FF2E205B"/>
                            <Setter TargetName="grid1" Property="Background" Value="#FF333399"/>
                            <Setter TargetName="text1" Property="Foreground" Value="White"/>
                            <Setter TargetName="text1" Property="FontWeight" Value="Bold"/>-->
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#FF323232"/>
                            <Setter TargetName="border" Property="Background" Value="#FF323232"/>
                            <!--<Setter TargetName="border" Property="Background" Value="#FF2E205B"/>
                            <Setter TargetName="grid1" Property="Background" Value="#FF333399"/>
                            <Setter TargetName="text1" Property="Foreground" Value="White"/>
                            <Setter TargetName="text1" Property="FontWeight" Value="Bold"/>-->
                            <!--<Setter TargetName="border"  Property="Background" Value="{StaticResource MainMenuChecked_SCB}"/>-->
                            <!--<Setter TargetName="border" Property="BorderBrush" Value="{StaticResource MainMenuChecked_SCB}"/>-->
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <!--<Setter TargetName="border" Property="BorderBrush" Value="#FF140A36" />-->
                            <!--<Setter Property="Foreground" Value="#FFF74848"/>-->
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <!--<Setter TargetName="border" Property="Opacity" Value="0.7" />-->
                            <!--<Setter Property="Foreground" Value="Gray" />-->
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--LIB SEARCH-->
    <Style x:Key="LibSearchFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <Grid Margin="4 2">
                        <Rectangle x:Name="r1" StrokeThickness="1" Stroke="Black" StrokeDashArray="2 2"/>
                        <Border x:Name="border" Width="{TemplateBinding ActualWidth}" Height="{TemplateBinding ActualHeight}"  CornerRadius="2" BorderThickness="1" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="LibSearchShadowStyle">
        <Setter Property="Control.Foreground" Value="#FF2E205B" />
    </Style>
    <Style x:Key="LibSearchButton" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Margin" Value="0,0"/>
        <Setter Property="FontFamily" Value="YouYuan"/>
        <Setter Property="FontSize" Value="16px"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource LibSearchFocusVisual}" />
        <Setter Property="Background" Value="Black"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" CornerRadius="23"
                		BorderThickness="2"
                		Padding="0" 
                		Height="46" Width="46" 
                        Background="Transparent" BorderBrush="DarkGray">
                        <Grid>
                            <Grid x:Name="grid1" Background="Transparent">
                                <TextBlock x:Name="text1" FontSize="24"
                                           HorizontalAlignment="Center" VerticalAlignment="Center" 
                                           Foreground="White"
                                           Text="{Binding Content, RelativeSource={RelativeSource Mode=TemplatedParent}}" 
										   Style="{DynamicResource FontAwesome}"/>
                            </Grid>

                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#FF333399"/>
                            <Setter TargetName="text1" Property="Foreground" Value="#FF333399"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#FF333399"/>
                            <Setter TargetName="text1" Property="Foreground" Value="#FF333399"/>
                            <!--<Setter TargetName="border" Property="Background" Value="#FF2E205B"/>
                            <Setter TargetName="grid1" Property="Background" Value="#FF333399"/>
                            <Setter TargetName="text1" Property="Foreground" Value="White"/>
                            <Setter TargetName="text1" Property="FontWeight" Value="Bold"/>-->
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <!--<Setter TargetName="border" Property="BorderBrush" Value="#FF140A36" />-->
                            <!--<Setter Property="Foreground" Value="#FFF74848"/>-->
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <!--<Setter TargetName="border" Property="Opacity" Value="0.7" />-->
                            <!--<Setter Property="Foreground" Value="Gray" />-->
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--MACHINE Menu-->
    <Style x:Key="MachineMenuFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <Grid Margin="4 2">
                        <Rectangle x:Name="r1" StrokeThickness="1" Stroke="Black" StrokeDashArray="2 2"/>
                        <Border x:Name="border" Width="{TemplateBinding ActualWidth}" Height="{TemplateBinding ActualHeight}"  CornerRadius="2" BorderThickness="1" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="MachineMenuShadowStyle">
        <Setter Property="Control.Foreground" Value="#FF2E205B" />
    </Style>
    <Style x:Key="MachineMenuButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="FontFamily" Value="YouYuan"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="FontSize" Value="16px"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource MachineMenuFocusVisual}" />
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="White"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="border" CornerRadius="2,0,0,2"
                		BorderThickness="1,1,0,1" SnapsToDevicePixels="False" 
                		Padding="0" Background="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path= Background}"
                        BorderBrush="#FF323232">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <TextBlock x:Name="text0" Grid.Row="0" FontSize="16" Margin="2,2,2,1"  FontFamily="Microsoft YaHei UI Light"
                                        HorizontalAlignment="Center" VerticalAlignment="Bottom"
										Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path= Content}" 
										Foreground="White"/>
                            <TextBlock x:Name="text1" Grid.Row="1"  FontSize="16" Margin="2,1,2,2"  FontFamily="Microsoft YaHei UI Light"
                                        HorizontalAlignment="Center" VerticalAlignment="Top"
										Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path= Tag}"  
										Foreground="White"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#FF333399"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#FF333399"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="border" Property="Background" Value="#FF323232"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <!--<Setter TargetName="border" Property="BorderBrush" Value="#FF140A36" />-->
                            <!--<Setter Property="Foreground" Value="#FFF74848"/>-->
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <!--<Setter TargetName="border" Property="Opacity" Value="0.7" />-->
                            <!--<Setter Property="Foreground" Value="Gray" />-->
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--SIMPLE CORNER MACHINING TYPE-->
    <Style x:Key="SimpleCornerMachiningTypeFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <Grid Margin="4 2">
                        <Rectangle x:Name="r1" StrokeThickness="1" Stroke="Black" StrokeDashArray="2 2"/>
                        <Border x:Name="border" Width="{TemplateBinding ActualWidth}" Height="{TemplateBinding ActualHeight}"  CornerRadius="2" BorderThickness="1" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SimpleCornerMachiningTypeShadowStyle">
        <Setter Property="Control.Foreground" Value="#FF2E205B" />
    </Style>
    <Style x:Key="SimpleCornerMachiningTypeButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="FontFamily" Value="YouYuan"/>
        <Setter Property="FontSize" Value="16px"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource SimpleCornerMachiningTypeFocusVisual}" />
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="DarkGray"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="border" CornerRadius="0"
                		BorderThickness="1"
                		Padding="0" 
                		Height="130" Width="170" 
                        Background="Transparent" BorderBrush="#FF323232">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="0"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid x:Name="grid0" Grid.Row="0"/>
                            <Grid x:Name="grid1" Grid.Row="1" Background="Transparent">
                                <Image x:Name="image1" Source="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path= Content}" Stretch="Fill">
                                </Image>
                                <!--<TextBlock x:Name="text1" Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path= Content}" FontSize="12"
                                           HorizontalAlignment="Center" VerticalAlignment="Center" FontFamily="YouYuan" FontWeight="Bold" Foreground="White"/>-->
                            </Grid>

                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#FF333399"/>
                            <Setter TargetName="border" Property="BorderThickness" Value="2"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#FF333399"/>
                            <Setter TargetName="border" Property="BorderThickness" Value="2"/>
                            <!--<Setter TargetName="border" Property="Background" Value="#FF2E205B"/>
                            <Setter TargetName="grid1" Property="Background" Value="#FF333399"/>
                            <Setter TargetName="text1" Property="Foreground" Value="White"/>
                            <Setter TargetName="text1" Property="FontWeight" Value="Bold"/>-->
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#FF333399"/>
                            <Setter TargetName="border" Property="Background" Value="#FF333399"/>
                            <Setter TargetName="border" Property="BorderThickness" Value="3"/>
                            <!--<Setter TargetName="border" Property="Background" Value="#FF2E205B"/>
                            <Setter TargetName="grid1" Property="Background" Value="#FF333399"/>
                            <Setter TargetName="text1" Property="Foreground" Value="White"/>
                            <Setter TargetName="text1" Property="FontWeight" Value="Bold"/>-->
                            <!--<Setter TargetName="border"  Property="Background" Value="{StaticResource MainMenuChecked_SCB}"/>-->
                            <!--<Setter TargetName="border" Property="BorderBrush" Value="{StaticResource MainMenuChecked_SCB}"/>-->
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <!--<Setter TargetName="border" Property="BorderBrush" Value="#FF140A36" />-->
                            <!--<Setter Property="Foreground" Value="#FFF74848"/>-->
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <!--<Setter TargetName="border" Property="Opacity" Value="0.7" />-->
                            <!--<Setter Property="Foreground" Value="Gray" />-->
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--SIMPLE CORNER MACHINING GENERATE PROGRAM-->
    <Style x:Key="MachineMainExcFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <Grid Margin="4 2">
                        <Rectangle x:Name="r1" StrokeThickness="1" Stroke="Black" StrokeDashArray="2 2"/>
                        <Border x:Name="border" Width="{TemplateBinding ActualWidth}" Height="{TemplateBinding ActualHeight}"  CornerRadius="2" BorderThickness="1" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="MachineMainExcShadowStyle">
        <Setter Property="Control.Foreground" Value="#FF2E205B" />
    </Style>
    <Style x:Key="MachineMainExcButton" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="FontFamily" Value="YouYuan"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="FontSize" Value="16px"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource MachineMainExcFocusVisual}" />
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="DarkGray"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" CornerRadius="2"
                		BorderThickness="1"
                		Padding="0" 
                        Background="Transparent" BorderBrush="#FF323232">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="0"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid x:Name="grid0" Grid.Row="0"/>
                            <Grid x:Name="grid1" Grid.Row="1" Background="Transparent">
                                <TextBlock x:Name="text1" 
                                           Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path= Content}" 
                                           FontSize="16"
                                           HorizontalAlignment="Center" VerticalAlignment="Center" FontFamily="YouYuan" FontWeight="Bold" Foreground="White"/>
                            </Grid>

                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#FF428bca"/>
                            <Setter TargetName="border" Property="BorderThickness" Value="2"/>
                            <Setter TargetName="border" Property="Background" Value="#FF428bca"/>
                            <Setter TargetName="text1" Property="Foreground" Value="white"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#FF428bca"/>
                            <Setter TargetName="border" Property="BorderThickness" Value="2"/>
                            <Setter TargetName="text1" Property="Foreground" Value="White"/>
                            <Setter TargetName="text1" Property="Text" Value="WAIT"/>
                            <!--<Setter TargetName="border" Property="Background" Value="#FF2E205B"/>
                            <Setter TargetName="grid1" Property="Background" Value="#FF333399"/>
                            <Setter TargetName="text1" Property="Foreground" Value="White"/>
                            <Setter TargetName="text1" Property="FontWeight" Value="Bold"/>-->
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <!--<Setter TargetName="border" Property="BorderBrush" Value="#FF140A36" />-->
                            <!--<Setter Property="Foreground" Value="#FFF74848"/>-->
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <!--<Setter TargetName="border" Property="Opacity" Value="0.7" />-->
                            <!--<Setter Property="Foreground" Value="Gray" />-->
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--WORKSTATION BUTTON-->
    <Style x:Key="WorkStationArrorFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <Grid Margin="4 2">
                        <Rectangle x:Name="r1" StrokeThickness="1" Stroke="Black" StrokeDashArray="2 2"/>
                        <Border x:Name="border" Width="{TemplateBinding ActualWidth}" Height="{TemplateBinding ActualHeight}"  CornerRadius="2" BorderThickness="1" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="WorkStationArrorShadowStyle">
        <Setter Property="Control.Foreground" Value="#FF2E205B" />
    </Style>
    <Style x:Key="WorkStationArrorButton" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="FontFamily" Value="YouYuan"/>
        <Setter Property="FontSize" Value="16px"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource WorkStationArrorFocusVisual}" />
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="DarkGray"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" CornerRadius="0"
                		BorderThickness="0"
                		Padding="0" 
                        Background="Transparent" BorderBrush="#FF323232">
                        <Grid>
                            <Rectangle>
                                <Rectangle.Fill>
                                    <DrawingBrush  Stretch="Uniform">
                                        <DrawingBrush.Drawing>
                                            <DrawingGroup>
                                                <DrawingGroup.Children>
                                                    <GeometryDrawing Brush="#FFC4C4C4" Geometry="F1 M 50,10.8333L 10.25,51.8333L 30,51.8333L 30,85.8333L 69.75,85.8333L 70,51.8333L 92.25,51.8333L 50,10.8333 Z ">
                                                        <GeometryDrawing.Pen>
                                                            <Pen LineJoin="Round" Brush="#FFF4F8F1"/>
                                                        </GeometryDrawing.Pen>
                                                    </GeometryDrawing>
                                                    <GeometryDrawing Brush="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path= Tag}" Geometry="F1 M 49.625,31.3333C 57.1499,31.3333 63.25,37.7692 63.25,45.7083C 63.25,53.6474 57.1499,60.0833 49.625,60.0833C 42.1001,60.0833 36,53.6474 36,45.7083C 36,37.7692 42.1001,31.3333 49.625,31.3333 Z ">
                                                        <GeometryDrawing.Pen>
                                                            <Pen LineJoin="Round" Brush="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path= Tag}"/>
                                                        </GeometryDrawing.Pen>
                                                    </GeometryDrawing>
                                                </DrawingGroup.Children>
                                            </DrawingGroup>
                                        </DrawingBrush.Drawing>
                                    </DrawingBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="Transparent"/>
                            <Setter TargetName="border" Property="BorderThickness" Value="2"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="Transparent"/>
                            <Setter TargetName="border" Property="BorderThickness" Value="2"/>
                            <!--<Setter TargetName="border" Property="Background" Value="#FF2E205B"/>
                            <Setter TargetName="grid1" Property="Background" Value="#FF333399"/>
                            <Setter TargetName="text1" Property="Foreground" Value="White"/>
                            <Setter TargetName="text1" Property="FontWeight" Value="Bold"/>-->
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <!--<Setter TargetName="border" Property="BorderBrush" Value="#FF140A36" />-->
                            <!--<Setter Property="Foreground" Value="#FFF74848"/>-->
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <!--<Setter TargetName="border" Property="Opacity" Value="0.7" />-->
                            <!--<Setter Property="Foreground" Value="Gray" />-->
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--WORKSTATION BUTTON LABEL-->
    <Style x:Key="WorkStationArrorLabelFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <Grid Margin="4 2">
                        <Rectangle x:Name="r1" StrokeThickness="1" Stroke="Black" StrokeDashArray="2 2"/>
                        <Border x:Name="border" Width="{TemplateBinding ActualWidth}" Height="{TemplateBinding ActualHeight}"  CornerRadius="2" BorderThickness="1" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="WorkStationArrorLabelShadowStyle">
        <Setter Property="Control.Foreground" Value="#FF2E205B" />
    </Style>
    <Style x:Key="WorkStationArrorLabel" TargetType="{x:Type Label}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="FontFamily" Value="YouYuan"/>
        <Setter Property="FontSize" Value="16px"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource WorkStationArrorLabelFocusVisual}" />
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="DarkGray"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <Border x:Name="border" CornerRadius="0"
                		BorderThickness="0"
                		Padding="0" 
                        Background="Transparent" BorderBrush="#FF323232">
                        <Grid>
                            <Rectangle>
                                <Rectangle.Fill>
                                    <DrawingBrush  Stretch="Uniform">
                                        <DrawingBrush.Drawing>
                                            <DrawingGroup>
                                                <DrawingGroup.Children>
                                                    <GeometryDrawing Brush="#FFC4C4C4" Geometry="F1 M 50,10.8333L 10.25,51.8333L 30,51.8333L 30,85.8333L 69.75,85.8333L 70,51.8333L 92.25,51.8333L 50,10.8333 Z ">
                                                        <GeometryDrawing.Pen>
                                                            <Pen LineJoin="Round" Brush="#FFF4F8F1"/>
                                                        </GeometryDrawing.Pen>
                                                    </GeometryDrawing>
                                                    <GeometryDrawing Brush="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path= Tag}" Geometry="F1 M 49.625,31.3333C 57.1499,31.3333 63.25,37.7692 63.25,45.7083C 63.25,53.6474 57.1499,60.0833 49.625,60.0833C 42.1001,60.0833 36,53.6474 36,45.7083C 36,37.7692 42.1001,31.3333 49.625,31.3333 Z ">
                                                        <GeometryDrawing.Pen>
                                                            <Pen LineJoin="Round" Brush="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path= Tag}"/>
                                                        </GeometryDrawing.Pen>
                                                    </GeometryDrawing>
                                                </DrawingGroup.Children>
                                            </DrawingGroup>
                                        </DrawingBrush.Drawing>
                                    </DrawingBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="Transparent"/>
                            <Setter TargetName="border" Property="BorderThickness" Value="2"/>
                        </Trigger>
                        <!--<Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="Transparent"/>
                            <Setter TargetName="border" Property="BorderThickness" Value="2"/>
                            --><!--<Setter TargetName="border" Property="Background" Value="#FF2E205B"/>
                            <Setter TargetName="grid1" Property="Background" Value="#FF333399"/>
                            <Setter TargetName="text1" Property="Foreground" Value="White"/>
                            <Setter TargetName="text1" Property="FontWeight" Value="Bold"/>--><!--
                        </Trigger>-->
                        <Trigger Property="IsFocused" Value="True">
                            <!--<Setter TargetName="border" Property="BorderBrush" Value="#FF140A36" />-->
                            <!--<Setter Property="Foreground" Value="#FFF74848"/>-->
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <!--<Setter TargetName="border" Property="Opacity" Value="0.7" />-->
                            <!--<Setter Property="Foreground" Value="Gray" />-->
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--EMC-->
    <Style x:Key="EmcFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <Grid Margin="4 2">
                        <Rectangle x:Name="r1" StrokeThickness="1" Stroke="Black" StrokeDashArray="2 2"/>
                        <Border x:Name="border" Width="{TemplateBinding ActualWidth}" Height="{TemplateBinding ActualHeight}"  CornerRadius="2" BorderThickness="1" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="EmcShadowStyle">
        <Setter Property="Control.Foreground" Value="#FF2E205B" />
    </Style>
    <Style x:Key="EmcButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="FontFamily" Value="YouYuan"/>
        <Setter Property="FontSize" Value="16px"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource EmcFocusVisual}" />
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="DarkGray"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="border" CornerRadius="0"
                		BorderThickness="0"
                		Padding="0" 
                        Background="Transparent" BorderBrush="#FF323232">
                        <Rectangle>
                            <Rectangle.Fill>
                                <DrawingBrush  Stretch="Uniform">
                                    <DrawingBrush.Drawing>
                                        <DrawingGroup>
                                            <DrawingGroup.Children>
                                                <GeometryDrawing Brush="#FFC00505" Geometry="F1 M 100.25,10.25C 150.094,10.25 190.5,50.4325 190.5,100C 190.5,149.568 150.094,189.75 100.25,189.75C 50.4063,189.75 10,149.568 10,100C 10,50.4325 50.4063,10.25 100.25,10.25 Z ">
                                                    <GeometryDrawing.Pen>
                                                        <Pen Thickness="10" LineJoin="Round" Brush="#FFFFFF00"/>
                                                    </GeometryDrawing.Pen>
                                                </GeometryDrawing>
                                                <GeometryDrawing Brush="#FFFFFFFF" Geometry="F1 M 99.75,59.25C 122.256,59.25 140.5,77.1587 140.5,99.25C 140.5,121.341 122.256,139.25 99.75,139.25C 77.2444,139.25 59,121.341 59,99.25C 59,77.1587 77.2444,59.25 99.75,59.25 Z ">
                                                    <GeometryDrawing.Pen>
                                                        <Pen Thickness="1" LineJoin="Round" Brush="#FFFFFF00"/>
                                                    </GeometryDrawing.Pen>
                                                </GeometryDrawing>
                                                <GeometryDrawing Brush="#FFDC1313" Geometry="F1 M 72.16,101.29L 93.92,101.29L 93.92,98.41L 72.8,98.41L 72.8,96.17L 93.92,96.17L 93.92,93.61L 73.12,93.61L 73.12,92.31C 72.28,93.0867 71.4,93.84 70.48,94.57C 69.9633,94.07 69.35,93.5283 68.64,92.945C 72.83,90.0783 76.03,86.8867 78.24,83.37L 80.8,83.965C 80.2633,84.7483 79.69,85.51 79.08,86.25L 90.72,86.25L 90.72,88.525C 90.0667,89.135 89.08,90.0833 87.76,91.37L 96.16,91.37L 96.16,104.49L 93.92,104.49L 93.92,103.53L 83.54,103.53C 84.6833,104.76 85.7967,106.052 86.88,107.405L 85.04,108.97C 83.9467,107.527 82.7467,106.085 81.44,104.645L 83.025,103.53L 72.16,103.53L 72.16,101.29 Z M 76.32,105.45L 78.88,105.45L 78.88,109.64C 78.88,110.9 79.47,111.53 80.65,111.53L 87.535,111.53C 88.775,111.53 89.5367,111.002 89.82,109.945C 90.0433,109.098 90.2367,107.92 90.4,106.41C 91.1567,106.72 92.01,107.032 92.96,107.345C 92.65,108.975 92.38,110.167 92.15,110.92C 91.6333,112.82 90.245,113.77 87.985,113.77L 79.93,113.77C 77.5233,113.77 76.32,112.463 76.32,109.85L 76.32,105.45 Z M 87.625,88.49L 77.315,88.49C 76.3483,89.48 75.3083,90.44 74.195,91.37L 84.88,91.37C 85.8567,90.39 86.7717,89.43 87.625,88.49 Z M 71.52,105.13L 73.76,105.85C 73.09,107.933 72.13,110.147 70.88,112.49C 70.2133,112.157 69.4667,111.823 68.64,111.49C 69.8833,109.51 70.8433,107.39 71.52,105.13 Z M 93.6,106.38L 95.44,105.13C 96.95,106.87 98.3633,108.62 99.68,110.38L 97.52,111.85C 96.2233,109.89 94.9167,108.067 93.6,106.38 Z "/>
                                                <GeometryDrawing Brush="#FFDC1313" Geometry="F1 M 111.84,91.05L 127.52,91.05L 127.52,97.77L 125.28,97.77L 125.28,97.13L 114.08,97.13L 114.08,97.77L 111.84,97.77L 111.84,91.05 Z M 100.32,98.73C 103.417,94.1533 105.657,89.14 107.04,83.69L 109.28,84.25C 108.49,86.8467 107.637,89.2617 106.72,91.495L 106.72,114.09L 104.48,114.09L 104.48,96.17C 103.49,98.0433 102.437,99.75 101.32,101.29C 101.007,100.387 100.673,99.5333 100.32,98.73 Z M 111.52,103.53L 127.84,103.53L 127.84,105.45L 121.76,105.45L 121.76,110.055C 121.76,112.512 120.653,113.75 118.44,113.77C 117.46,113.793 116.17,113.783 114.57,113.74C 114.447,112.96 114.283,112.117 114.08,111.21C 115.403,111.423 116.625,111.53 117.745,111.53C 118.928,111.53 119.52,110.827 119.52,109.42L 119.52,105.45L 111.52,105.45L 111.52,103.53 Z M 108.32,99.05L 131.04,99.05L 131.04,103.85L 128.8,103.85L 128.8,100.97L 110.56,100.97L 110.56,103.85L 108.32,103.85L 108.32,99.05 Z M 109.28,87.21L 118.96,87.21C 118.447,86.22 117.887,85.2533 117.28,84.31L 119.52,83.37C 120.257,84.63 120.923,85.91 121.52,87.21L 130.72,87.21L 130.72,89.13L 109.28,89.13L 109.28,87.21 Z M 125.28,92.97L 114.08,92.97L 114.08,95.21L 125.28,95.21L 125.28,92.97 Z "/>
                                            </DrawingGroup.Children>
                                        </DrawingGroup>
                                    </DrawingBrush.Drawing>
                                </DrawingBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="Transparent"/>
                            <Setter TargetName="border" Property="BorderThickness" Value="2"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="Transparent"/>
                            <Setter TargetName="border" Property="BorderThickness" Value="2"/>
                            <!--<Setter TargetName="border" Property="Background" Value="#FF2E205B"/>
                            <Setter TargetName="grid1" Property="Background" Value="#FF333399"/>
                            <Setter TargetName="text1" Property="Foreground" Value="White"/>
                            <Setter TargetName="text1" Property="FontWeight" Value="Bold"/>-->
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="Transparent"/>
                            <Setter TargetName="border" Property="Background" Value="#FF333399"/>
                            <!--<Setter TargetName="border" Property="Background" Value="#FF2E205B"/>
                            <Setter TargetName="grid1" Property="Background" Value="#FF333399"/>
                            <Setter TargetName="text1" Property="Foreground" Value="White"/>
                            <Setter TargetName="text1" Property="FontWeight" Value="Bold"/>-->
                            <!--<Setter TargetName="border"  Property="Background" Value="{StaticResource MainMenuChecked_SCB}"/>-->
                            <!--<Setter TargetName="border" Property="BorderBrush" Value="{StaticResource MainMenuChecked_SCB}"/>-->
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <!--<Setter TargetName="border" Property="BorderBrush" Value="#FF140A36" />-->
                            <!--<Setter Property="Foreground" Value="#FFF74848"/>-->
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <!--<Setter TargetName="border" Property="Opacity" Value="0.7" />-->
                            <!--<Setter Property="Foreground" Value="Gray" />-->
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--ProgramTrans-->
    <Style x:Key="ProgramTransVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <Grid Margin="4 2">
                        <Rectangle x:Name="r1" StrokeThickness="1" Stroke="Black" StrokeDashArray="2 2"/>
                        <Border x:Name="border" Width="{TemplateBinding ActualWidth}" Height="{TemplateBinding ActualHeight}"  CornerRadius="2" BorderThickness="1" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ProgramTransStyle">
        <Setter Property="Control.Foreground" Value="#FF2E205B" />
    </Style>
    <Style x:Key="ProgramTransButton" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="FontFamily" Value="YouYuan"/>
        <Setter Property="FontSize" Value="16px"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource ProgramTransVisual}" />
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="DarkGray"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" CornerRadius="2"
						BorderThickness="0"
						Padding="0"
						Height="Auto" Width="Auto"
						SnapsToDevicePixels="False" BorderBrush="White" Background="Transparent">
                        <Grid>
                            <Border CornerRadius="2" BorderBrush="White" BorderThickness="0">
                                <Grid HorizontalAlignment="Left" VerticalAlignment="Center" Margin="0,0,0,0">
                                    <TextBlock x:Name="text" FontSize="36" Margin="5" HorizontalAlignment="Center" VerticalAlignment="Center"
										Text="{Binding Content, RelativeSource={RelativeSource Mode=TemplatedParent}}" 
										Foreground="Green" Style="{DynamicResource FontAwesome}"/>
                                </Grid>
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="Transparent"/>
                            <Setter TargetName="border" Property="BorderThickness" Value="2"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="Transparent"/>
                            <Setter TargetName="border" Property="BorderThickness" Value="2"/>
                            <!--<Setter TargetName="border" Property="Background" Value="#FF2E205B"/>
                            <Setter TargetName="grid1" Property="Background" Value="#FF333399"/>
                            <Setter TargetName="text1" Property="Foreground" Value="White"/>
                            <Setter TargetName="text1" Property="FontWeight" Value="Bold"/>-->
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <!--<Setter TargetName="border" Property="BorderBrush" Value="#FF140A36" />-->
                            <!--<Setter Property="Foreground" Value="#FFF74848"/>-->
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <!--<Setter TargetName="border" Property="Opacity" Value="0.7" />-->
                            <!--<Setter Property="Foreground" Value="Gray" />-->
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--DeleteSmall-->
    <Style x:Key="DeleteSmallVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <Grid Margin="4 2">
                        <Rectangle x:Name="r1" StrokeThickness="1" Stroke="Black" StrokeDashArray="2 2"/>
                        <Border x:Name="border" Width="{TemplateBinding ActualWidth}" Height="{TemplateBinding ActualHeight}"  CornerRadius="2" BorderThickness="1" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DeleteSmallStyle">
        <Setter Property="Control.Foreground" Value="#FF2E205B" />
    </Style>
    <Style x:Key="DeleteSmallButton" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="FontFamily" Value="YouYuan"/>
        <Setter Property="FontSize" Value="16px"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource DeleteSmallVisual}" />
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="DarkGray"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" CornerRadius="2"
						BorderThickness="0"
						Padding="0"
						Height="24" Width="24"
						SnapsToDevicePixels="False" BorderBrush="White" Background="Transparent">
                        <Grid>
                            <Border CornerRadius="2" BorderBrush="White" BorderThickness="0">
                                <Grid HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0">
                                    <TextBlock x:Name="text" FontSize="20" Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center"
										Text="{Binding Content, RelativeSource={RelativeSource Mode=TemplatedParent}}" 
										Foreground="Red" Style="{DynamicResource FontAwesome}"/>
                                </Grid>
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="Transparent"/>
                            <Setter TargetName="border" Property="BorderThickness" Value="2"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="Transparent"/>
                            <Setter TargetName="border" Property="BorderThickness" Value="2"/>
                            <!--<Setter TargetName="border" Property="Background" Value="#FF2E205B"/>
                            <Setter TargetName="grid1" Property="Background" Value="#FF333399"/>
                            <Setter TargetName="text1" Property="Foreground" Value="White"/>
                            <Setter TargetName="text1" Property="FontWeight" Value="Bold"/>-->
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <!--<Setter TargetName="border" Property="BorderBrush" Value="#FF140A36" />-->
                            <!--<Setter Property="Foreground" Value="#FFF74848"/>-->
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <!--<Setter TargetName="border" Property="Opacity" Value="0.7" />-->
                            <!--<Setter Property="Foreground" Value="Gray" />-->
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="OpenSmallVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <Grid Margin="4 2">
                        <Rectangle x:Name="r1" StrokeThickness="1" Stroke="Black" StrokeDashArray="2 2"/>
                        <Border x:Name="border" Width="{TemplateBinding ActualWidth}" Height="{TemplateBinding ActualHeight}"  CornerRadius="2" BorderThickness="1" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="OpenSmallStyle">
        <Setter Property="Control.Foreground" Value="#FF2E205B" />
    </Style>
    <Style x:Key="OpenSmallButton" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="FontFamily" Value="YouYuan"/>
        <Setter Property="FontSize" Value="16px"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource OpenSmallVisual}" />
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="DarkGray"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" CornerRadius="2"
						BorderThickness="0"
						Padding="0"
						Height="24" Width="24"
						SnapsToDevicePixels="False" BorderBrush="White" Background="Transparent">
                        <Grid>
                            <Border CornerRadius="2" BorderBrush="White" BorderThickness="0">
                                <Grid HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0">
                                    <TextBlock x:Name="text" FontSize="20" Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center"
										Text="{Binding Content, RelativeSource={RelativeSource Mode=TemplatedParent}}" 
										Foreground="Yellow" Style="{DynamicResource FontAwesome}"/>
                                </Grid>
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="Transparent"/>
                            <Setter TargetName="border" Property="BorderThickness" Value="2"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="Transparent"/>
                            <Setter TargetName="border" Property="BorderThickness" Value="2"/>
                            <!--<Setter TargetName="border" Property="Background" Value="#FF2E205B"/>
                            <Setter TargetName="grid1" Property="Background" Value="#FF333399"/>
                            <Setter TargetName="text1" Property="Foreground" Value="White"/>
                            <Setter TargetName="text1" Property="FontWeight" Value="Bold"/>-->
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <!--<Setter TargetName="border" Property="BorderBrush" Value="#FF140A36" />-->
                            <!--<Setter Property="Foreground" Value="#FFF74848"/>-->
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <!--<Setter TargetName="border" Property="Opacity" Value="0.7" />-->
                            <!--<Setter Property="Foreground" Value="Gray" />-->
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--RefreshSmall-->
    <Style x:Key="RefreshSmallVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <Grid Margin="4 2">
                        <Rectangle x:Name="r1" StrokeThickness="1" Stroke="Black" StrokeDashArray="2 2"/>
                        <Border x:Name="border" Width="{TemplateBinding ActualWidth}" Height="{TemplateBinding ActualHeight}"  CornerRadius="2" BorderThickness="1" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RefreshSmallStyle">
        <Setter Property="Control.Foreground" Value="#FF2E205B" />
    </Style>
    <Style x:Key="RefreshSmallButton" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="FontFamily" Value="YouYuan"/>
        <Setter Property="FontSize" Value="16px"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource RefreshSmallVisual}" />
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="DarkGray"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" CornerRadius="2"
						BorderThickness="0"
						Padding="0"
						Height="24" Width="24"
						SnapsToDevicePixels="False" BorderBrush="White" Background="Transparent">
                        <Grid>
                            <Border CornerRadius="2" BorderBrush="White" BorderThickness="0">
                                <Grid HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0">
                                    <TextBlock x:Name="text" FontSize="20" Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center"
										Text="{Binding Content, RelativeSource={RelativeSource Mode=TemplatedParent}}" 
										Foreground="Green" Style="{DynamicResource FontAwesome}"/>
                                </Grid>
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="Transparent"/>
                            <Setter TargetName="border" Property="BorderThickness" Value="2"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="Transparent"/>
                            <Setter TargetName="border" Property="BorderThickness" Value="2"/>
                            <!--<Setter TargetName="border" Property="Background" Value="#FF2E205B"/>
                            <Setter TargetName="grid1" Property="Background" Value="#FF333399"/>
                            <Setter TargetName="text1" Property="Foreground" Value="White"/>
                            <Setter TargetName="text1" Property="FontWeight" Value="Bold"/>-->
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <!--<Setter TargetName="border" Property="BorderBrush" Value="#FF140A36" />-->
                            <!--<Setter Property="Foreground" Value="#FFF74848"/>-->
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <!--<Setter TargetName="border" Property="Opacity" Value="0.7" />-->
                            <!--<Setter Property="Foreground" Value="Gray" />-->
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--MainSel-->
    <Style x:Key="MainSelSmallVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <Grid Margin="4 2">
                        <Rectangle x:Name="r1" StrokeThickness="1" Stroke="Black" StrokeDashArray="2 2"/>
                        <Border x:Name="border" Width="{TemplateBinding ActualWidth}" Height="{TemplateBinding ActualHeight}"  CornerRadius="2" BorderThickness="1" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="MainSelSmallStyle">
        <Setter Property="Control.Foreground" Value="#FF2E205B" />
    </Style>
    <Style x:Key="MainSelSmallButton" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="FontFamily" Value="YouYuan"/>
        <Setter Property="FontSize" Value="16px"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource MainSelSmallVisual}" />
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="DarkGray"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" CornerRadius="2"
						BorderThickness="0"
						Padding="0"
						Height="24" Width="24"
						SnapsToDevicePixels="False" BorderBrush="White" Background="Transparent">
                        <Grid>
                            <Border CornerRadius="2" BorderBrush="White" BorderThickness="0">
                                <Grid HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0">
                                    <TextBlock x:Name="text" FontSize="20" Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center"
										Text="{Binding Content, RelativeSource={RelativeSource Mode=TemplatedParent}}" 
										Foreground="{Binding Foreground, RelativeSource={RelativeSource Mode=TemplatedParent}}" Style="{DynamicResource FontAwesome}"/>
                                </Grid>
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="Transparent"/>
                            <Setter TargetName="border" Property="BorderThickness" Value="2"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="Transparent"/>
                            <Setter TargetName="border" Property="BorderThickness" Value="2"/>
                            <!--<Setter TargetName="border" Property="Background" Value="#FF2E205B"/>
                            <Setter TargetName="grid1" Property="Background" Value="#FF333399"/>
                            <Setter TargetName="text1" Property="Foreground" Value="White"/>
                            <Setter TargetName="text1" Property="FontWeight" Value="Bold"/>-->
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <!--<Setter TargetName="border" Property="BorderBrush" Value="#FF140A36" />-->
                            <!--<Setter Property="Foreground" Value="#FFF74848"/>-->
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <!--<Setter TargetName="border" Property="Opacity" Value="0.7" />-->
                            <!--<Setter Property="Foreground" Value="Gray" />-->
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--NO FILLED TOGGLEBUTTON-->
    <Style x:Key="NoFilledToggleFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <Grid Margin="4 2">
                        <Rectangle x:Name="r1" StrokeThickness="1" Stroke="Black" StrokeDashArray="2 2"/>
                        <Border x:Name="border" Width="{TemplateBinding ActualWidth}" Height="{TemplateBinding ActualHeight}"  CornerRadius="2" BorderThickness="1" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="NoFilledToggleShadowStyle">
        <Setter Property="Control.Foreground" Value="#FF2E205B" />
    </Style>
    <Style x:Key="NoFilledToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="FontFamily" Value="YouYuan"/>
        <Setter Property="FontSize" Value="16px"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource NoFilledToggleFocusVisual}" />
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="DarkGray"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="border" CornerRadius="0"
                		BorderThickness="1"
                		Padding="0" 
                        Background="Transparent" BorderBrush="#FF323232">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="0"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid x:Name="grid0" Grid.Row="0"/>
                            <Grid x:Name="grid1" Grid.Row="1" Background="Transparent">
                                <TextBlock x:Name="text1" Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path= Content}" FontSize="12"
                                           HorizontalAlignment="Center" VerticalAlignment="Center" FontFamily="YouYuan" FontWeight="Bold" Foreground="White"/>
                            </Grid>

                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#FF333399"/>
                            <Setter TargetName="border" Property="BorderThickness" Value="2"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#FF333399"/>
                            <Setter TargetName="border" Property="BorderThickness" Value="2"/>
                            <!--<Setter TargetName="border" Property="Background" Value="#FF2E205B"/>
                            <Setter TargetName="grid1" Property="Background" Value="#FF333399"/>
                            <Setter TargetName="text1" Property="Foreground" Value="White"/>
                            <Setter TargetName="text1" Property="FontWeight" Value="Bold"/>-->
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#FF333399"/>
                            <Setter TargetName="border" Property="Background" Value="#FF333399"/>
                            <!--<Setter TargetName="border" Property="Background" Value="#FF2E205B"/>
                            <Setter TargetName="grid1" Property="Background" Value="#FF333399"/>
                            <Setter TargetName="text1" Property="Foreground" Value="White"/>
                            <Setter TargetName="text1" Property="FontWeight" Value="Bold"/>-->
                            <!--<Setter TargetName="border"  Property="Background" Value="{StaticResource MainMenuChecked_SCB}"/>-->
                            <!--<Setter TargetName="border" Property="BorderBrush" Value="{StaticResource MainMenuChecked_SCB}"/>-->
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <!--<Setter TargetName="border" Property="BorderBrush" Value="#FF140A36" />-->
                            <!--<Setter Property="Foreground" Value="#FFF74848"/>-->
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <!--<Setter TargetName="border" Property="Opacity" Value="0.7" />-->
                            <!--<Setter Property="Foreground" Value="Gray" />-->
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--NO FILLED BUTTON-->
    <Style x:Key="NoFilledFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <Grid Margin="4 2">
                        <Rectangle x:Name="r1" StrokeThickness="1" Stroke="Black" StrokeDashArray="2 2"/>
                        <Border x:Name="border" Width="{TemplateBinding ActualWidth}" Height="{TemplateBinding ActualHeight}"  CornerRadius="2" BorderThickness="1" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="NoFilledShadowStyle">
        <Setter Property="Control.Foreground" Value="#FF2E205B" />
    </Style>
    <Style x:Key="NoFilledButton" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="FontFamily" Value="YouYuan"/>
        <Setter Property="FontSize" Value="16px"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource NoFilledFocusVisual}" />
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="DarkGray"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" CornerRadius="0"
                		BorderThickness="1"
                		Padding="0" 
                        Background="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path= Background}" BorderBrush="#FF323232">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="0"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid x:Name="grid0" Grid.Row="0"/>
                            <Grid x:Name="grid1" Grid.Row="1" Background="Transparent">
                                <TextBlock x:Name="text1" Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path= Content}" FontSize="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path= FontSize}"
                                           HorizontalAlignment="Center" VerticalAlignment="Center" FontFamily="YouYuan" FontWeight="Bold" Foreground="White"/>
                            </Grid>

                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#FF333399"/>
                            <Setter TargetName="border" Property="BorderThickness" Value="2"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#FF333399"/>
                            <Setter TargetName="border" Property="BorderThickness" Value="2"/>
                            <!--<Setter TargetName="border" Property="Background" Value="#FF2E205B"/>
                            <Setter TargetName="grid1" Property="Background" Value="#FF333399"/>
                            <Setter TargetName="text1" Property="Foreground" Value="White"/>
                            <Setter TargetName="text1" Property="FontWeight" Value="Bold"/>-->
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <!--<Setter TargetName="border" Property="BorderBrush" Value="#FF140A36" />-->
                            <!--<Setter Property="Foreground" Value="#FFF74848"/>-->
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <!--<Setter TargetName="border" Property="Opacity" Value="0.7" />-->
                            <!--<Setter Property="Foreground" Value="Gray" />-->
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--ComboBox-->
    <Style x:Key="ComboBoxItemStyle" TargetType="ComboBoxItem">
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Border Name="Back" Background="White" BorderThickness="0,0,0,0" BorderBrush="#FF6A6A6A">
                        <ContentPresenter ContentSource="{Binding Source}" Margin="{TemplateBinding Padding}" HorizontalAlignment="Left" VerticalAlignment="Center"></ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--<Trigger Property="IsHighlighted" Value="True">
                            <Setter TargetName="Back" Property="Background" Value="Pink"></Setter>
                        </Trigger>-->
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Back" Property="Background" Value="#FFCBE3FE"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CncSKFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <Grid Margin="4 2">
                        <Rectangle x:Name="r1" StrokeThickness="1" Stroke="Black" StrokeDashArray="2 2"/>
                        <Border x:Name="border" Width="{TemplateBinding ActualWidth}" Height="{TemplateBinding ActualHeight}"  CornerRadius="2" BorderThickness="1" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CncSKShadowStyle">
        <Setter Property="Control.Foreground" Value="#FF2E205B" />
    </Style>
    <Style x:Key="CncSKButton" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="FontFamily" Value="YouYuan"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="FontSize" Value="16px"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource CncSKFocusVisual}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" CornerRadius="2"
                		BorderThickness="2" SnapsToDevicePixels="False" 
                		Padding="0" Background="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path= Background}"
                        BorderBrush="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path= BorderBrush}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <TextBlock x:Name="text0" Grid.Row="0" FontSize="12" Margin="2,2,2,1"  FontFamily="Microsoft YaHei UI Light"
                                        HorizontalAlignment="Center" VerticalAlignment="Bottom"
										Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path= Content}" TextWrapping="Wrap"
										Foreground="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path= Foreground}"/>
                            <!--<TextBlock x:Name="text1" Grid.Row="1"  FontSize="16" Margin="2,1,2,2"  FontFamily="Microsoft YaHei UI Light"
                                        HorizontalAlignment="Center" VerticalAlignment="Top"
										Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path= Tag}"  
										Foreground="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path= Foreground}"/>-->
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#FF333399"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#FF333399"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <!--<Setter TargetName="border" Property="BorderBrush" Value="#FF140A36" />-->
                            <!--<Setter Property="Foreground" Value="#FFF74848"/>-->
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <!--<Setter TargetName="border" Property="Opacity" Value="0.7" />-->
                            <!--<Setter Property="Foreground" Value="Gray" />-->
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>